---
import AnimationToggle from "../../components/AnimationToggle.astro";

const { Component, props, pageSettings } = Astro.props;
const {
  id,
  layout,
  highlightedText,
  mediaType,
  media,
  txtColor,
  bgColor,
  ctaText,
  link,
  imgBg,
  overlay,
  videoBg,
  body,
  animations = true
} = props;

// Nova lógica com 3 opções: enable_all, disable_all, custom
const globalAnimationMode = pageSettings?.animations || 'enable_all';

let shouldDisableAnimations;

switch (globalAnimationMode) {
  case 'enable_all':
    shouldDisableAnimations = false; // Sempre habilitado
    break;
  case 'disable_all':
    shouldDisableAnimations = true; // Sempre desabilitado
    break;
  case 'custom':
    shouldDisableAnimations = !animations; // Segue configuração individual
    break;
  default:
    shouldDisableAnimations = false;
}

// Se `media` for uma imagem, importamos dinamicamente
let img;
if (media && mediaType === 'image' && media) {
  img = `${import.meta.env.BASE_URL}${media}`;
}

let imgSrc;
if (imgBg) {
    imgSrc = `${import.meta.env.BASE_URL}${imgBg}`;
}


---
<AnimationToggle disabled={shouldDisableAnimations}>
  <section id={id} style={`background-color: var(--clr-bg);`}>
    <Component
      layout={layout}
      highlightedText={highlightedText}
      media={mediaType === 'image' ? img : media}
      mediaType={mediaType}
      text={ctaText}
      link={link}
      imgBg={imgSrc}
      videoBg={videoBg}
      txtColor={txtColor}
      bgColor={bgColor}
      overlay={overlay}
    >
      {body && <Fragment set:html={body} />}
      <slot />
    </Component>
  </section>
</AnimationToggle>
