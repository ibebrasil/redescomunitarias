---
const { link, icon, size } = Astro.props;
// link: objeto do link com {url:..., target:..., text:... }
// icon: html span do Ã­cone escolhido da biblioteca do material symbols ex: "<span class="material-symbols-outlined">arrow_right_alt</span>}"
// size: "wide" ou null
---

<a
  class:list={["reveal--fadeInLeft", "button", size === "wide" && "button--wide"]}
  target={link.target}
  href={link.url}
>
  {link.text}
  {icon ? <Fragment set:html={icon} /> : <span class="material-symbols-outlined">arrow_right_alt</span>}
</a>

<style lang="scss">
  @use "../assets/styles/config/config" as *;

  .button {
    @include type('c-m');
    font-weight: 600;
    width: fit-content;
    color: var(--clr-txt);
    border: 2px solid var(--clr-txt);
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 8px 60px;
    transition: .3s ease;

    :global(+ .button) {
      margin-top: 16px;
    }

    &:hover {
      background-color: var(--clr-txt);
      color: var(--clr-bg);
    }
    
    &--wide {
      width: 100%;
      justify-content: space-between;
      padding: 16px;
    }
  }
</style>